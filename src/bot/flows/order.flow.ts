import { callSendAPIAsync, sendTypingOn } from '@/utils/messenger';
import { getSession, updateSession } from '../state';
import { startAuth } from './auth.flow';
import MessengerUser from '@/models/MessengerUser';
import connectDB from '@/lib/mongodb';
import { parseNameAddress } from '@/utils/nameAddressAI';
import { computeShippingFee } from '@/utils/shipping';
import { getProductById } from '@/utils/productCache';
import { transformImage } from '@utils/image';

interface ShippingInfo {
  name: string;
  address: string;
  deliveryMethod?: 'standard' | 'lalamove';
  deliveryLocation?: {
    latitude: number;
    longitude: number;
    mapDescription?: string;
  };
}

export async function startCheckout(psid: string) {
  const session = await getSession(psid);
  if (session.cart.length === 0) {
    callSendAPIAsync(psid, { text: '‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ß‡πà‡∏≤‡∏á‡∏≠‡∏¢‡∏π‡πà‡∏Ñ‡πà‡∏∞' });
    return;
  }
  // ‡∏Ç‡πâ‡∏≤‡∏°‡πÑ‡∏õ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
  await startAuth(psid);
}

export async function handleName(psid: string, name: string) {
  // ‡πÄ‡∏Å‡πá‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡πÑ‡∏ß‡πâ ‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£ (OTP)
  const sess = await getSession(psid);
  await updateSession(psid, { tempData: { ...(sess.tempData || {}), name } });

  // ‡πÉ‡∏ä‡πâ flow ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ç‡∏≠‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡πÅ‡∏•‡∏∞ OTP
  return startAuth(psid);
}

// ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏ó‡∏µ‡πà‡∏£‡∏ß‡∏°‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏•‡∏∞‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà (‡πÅ‡∏¢‡∏Å‡∏î‡πâ‡∏ß‡∏¢‡∏Ç‡∏∂‡πâ‡∏ô‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡πÉ‡∏´‡∏°‡πà)
export async function handleNameAddress(psid: string, fullText: string) {
  // ‡πÉ‡∏ä‡πâ OpenAI ‡πÅ‡∏¢‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏•‡∏∞‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà
  const parsed = await parseNameAddress(fullText);

  if (!parsed) {
    return callSendAPIAsync(psid, {
      text: '‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢ ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏¢‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏•‡∏∞‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏û‡∏¥‡∏°‡∏û‡πå‡πÉ‡∏´‡∏°‡πà ‡πÄ‡∏ä‡πà‡∏ô:\n‡∏™‡∏°‡∏ä‡∏≤‡∏¢ ‡πÉ‡∏à‡∏î‡∏µ \n123/45 ‡∏´‡∏°‡∏π‡πà 5 ‡∏ï.‡∏ö‡∏≤‡∏á‡∏£‡∏±‡∏Å ...',
    });
  }

  return handleAddress(psid, parsed.address, parsed.name);
}

// ‡∏õ‡∏£‡∏±‡∏ö handleAddress ‡πÉ‡∏´‡πâ‡∏£‡∏±‡∏ö‡∏ä‡∏∑‡πà‡∏≠ optional (‡∏Å‡∏£‡∏ì‡∏µ‡∏°‡∏≤‡∏à‡∏≤‡∏Å handleNameAddress)
export async function handleAddress(psid: string, address: string, nameOverride?: string) {
  const session = await getSession(psid);
  const name = nameOverride || (session.tempData as any)?.name || '';
  const shipping: ShippingInfo = { name, address };

  await sendTypingOn(psid);

  // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á address ‡∏°‡∏≤‡πÅ‡∏•‡πâ‡∏ß ‡πÅ‡∏™‡∏î‡∏á‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏£‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏´‡∏°‡πà‡πÅ‡∏•‡πâ‡∏ß
  if (address) {
    // ‡∏™‡∏£‡∏∏‡∏õ‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πà‡∏ß‡∏¢
    const itemsText = session.cart.map((c) => {
      let itemText = `‚Ä¢ ${c.name} x${c.quantity}`;
      if (c.unitLabel) {
        itemText += ` (${c.unitLabel})`;
      }
      if (c.selectedOptions && Object.keys(c.selectedOptions).length > 0) {
        const optionsText = Object.entries(c.selectedOptions).map(([k, v]) => `${k}: ${v}`).join(', ');
        itemText += ` [${optionsText}]`;
      }
      return itemText;
    }).join('\n');
    const total = session.cart.reduce((s, i) => s + i.price * i.quantity, 0);
    const shippingFee = await computeShippingFee(session.cart);
    const grand = total + shippingFee;

    // ‡∏ñ‡∏≤‡∏°‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á
    callSendAPIAsync(psid, {
      text: `üì¶ ‡∏™‡∏£‡∏∏‡∏õ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠\n${itemsText}\n‡∏¢‡∏≠‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ ${total.toLocaleString()} ‡∏ö‡∏≤‡∏ó\n‡∏Ñ‡πà‡∏≤‡∏™‡πà‡∏á ${shippingFee.toLocaleString()} ‡∏ö‡∏≤‡∏ó\n‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ${grand.toLocaleString()} ‡∏ö‡∏≤‡∏ó\n\n‡∏ä‡∏∑‡πà‡∏≠: ${name}\n‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà: ${address}\n\nüöö ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á:`,
      quick_replies: [
        { content_type: 'text', title: 'üì¶ ‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏õ‡∏Å‡∏ï‡∏¥', payload: 'DELIVERY_STANDARD' },
        { content_type: 'text', title: 'üèçÔ∏è Lalamove ‡∏™‡πà‡∏á‡∏î‡πà‡∏ß‡∏ô', payload: 'DELIVERY_LALAMOVE' }
      ],
    });

    await updateSession(psid, { step: 'ask_delivery_method', tempData: { ...shipping } });
    return;
  }

  // ‡∏î‡∏∂‡∏á‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ß‡πâ (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
  try {
    await connectDB();
    const mu = await MessengerUser.findOne({ psid });
    if (mu?.userId) {
      // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ userId ‡πÅ‡∏™‡∏î‡∏á‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡πÅ‡∏•‡πâ‡∏ß
      // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ß‡πâ
      const originEnv = process.env.SITE_URL || process.env.NEXT_PUBLIC_SITE_URL || 'https://www.winrichdynamic.com';
      const origin = originEnv.startsWith('http') ? originEnv : `https://${originEnv.replace(/^https?:\/\//, '')}`;
      const res = await fetch(`${origin.replace(/\/$/, '')}/api/auth/me`, {
        headers: { Cookie: `userId=${mu.userId}` }
      });
      
      if (res.ok) {
        const data = await res.json();
        if (data.success && data.user.addresses && data.user.addresses.length > 0) {
          // ‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ß‡πâ‡πÉ‡∏´‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
          const addressOptions = data.user.addresses.map((addr: any, idx: number) => {
            let label = addr.label;
            if (addr.isDefault) label += ' (‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô)';
            return {
              content_type: 'text',
              title: label.substring(0, 20),
              payload: `SELECT_ADDR_${idx}`
            };
          });
          
          // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏£‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏´‡∏°‡πà
          addressOptions.push({
            content_type: 'text',
            title: 'üìù ‡∏Å‡∏£‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏´‡∏°‡πà',
            payload: 'NEW_ADDRESS'
          });
          
          // ‡πÄ‡∏Å‡πá‡∏ö‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÑ‡∏ß‡πâ‡πÉ‡∏ô session
          await updateSession(psid, { 
            tempData: { 
              ...session.tempData, 
              savedAddresses: data.user.addresses,
              name
            } 
          });
          
          callSendAPIAsync(psid, {
            text: '‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏à‡∏±‡∏î‡∏™‡πà‡∏á:',
            quick_replies: addressOptions.slice(0, 11) // ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 11 ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
          });
          
          return;
        }
      }
    }
  } catch (error) {
    console.error('Error fetching saved addresses:', error);
  }
  
  // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ß‡πâ ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ ‡πÉ‡∏´‡πâ‡∏Ç‡∏≠‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏´‡∏°‡πà
  return promptNewAddress(psid);
}

// ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å delivery method
export async function handleDeliveryMethod(psid: string, method: 'standard' | 'lalamove') {
  const session = await getSession(psid);
  const shipping = session.tempData as any as ShippingInfo;
  shipping.deliveryMethod = method;

  if (method === 'lalamove') {
    // ‡∏ñ‡∏≤‡∏° location ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Lalamove
    callSendAPIAsync(psid, {
      text: `üèçÔ∏è ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Lalamove ‡∏™‡πà‡∏á‡∏î‡πà‡∏ß‡∏ô (‡∏Å‡∏ó‡∏°.-‡∏õ‡∏£‡∏¥‡∏°‡∏ì‡∏ë‡∏•)\n\nüìç ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏™‡πà‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏õ‡∏±‡∏Å‡∏´‡∏°‡∏∏‡∏î‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ Lalamove ‡∏£‡∏±‡∏ö‡∏Ç‡∏≠‡∏á‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥\n\n‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ:\n1Ô∏è‚É£ ‡πÅ‡∏ä‡∏£‡πå‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô (‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° + ‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Location)\n2Ô∏è‚É£ ‡∏´‡∏£‡∏∑‡∏≠‡∏û‡∏¥‡∏°‡∏û‡πå‡∏û‡∏¥‡∏Å‡∏±‡∏î ‡πÄ‡∏ä‡πà‡∏ô "13.756331, 100.501765 ‡∏™‡∏≥‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏ç‡πà"`,
      quick_replies: [
        { content_type: 'location' }
      ]
    });
    await updateSession(psid, { step: 'ask_lalamove_location', tempData: shipping });
  } else {
    // ‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏õ‡∏Å‡∏ï‡∏¥ ‡πÑ‡∏õ‡∏ï‡πà‡∏≠‡∏ó‡∏µ‡πà payment method
    shipping.deliveryMethod = 'standard';
    callSendAPIAsync(psid, {
      text: `üì¶ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏õ‡∏Å‡∏ï‡∏¥\n\nüí∞ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô:`,
      quick_replies: [
        { content_type: 'text', title: 'üíµ ‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏á‡∏¥‡∏ô‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á', payload: 'PAYMENT_COD' },
        { content_type: 'text', title: 'üè¶ ‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô', payload: 'PAYMENT_TRANSFER' }
      ]
    });
    await updateSession(psid, { step: 'ask_payment', tempData: shipping });
  }
}

// ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ location ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Lalamove
export async function handleLalamoveLocation(psid: string, latitude: number, longitude: number, description?: string) {
  const session = await getSession(psid);
  const shipping = session.tempData as any as ShippingInfo;
  
  shipping.deliveryLocation = {
    latitude,
    longitude,
    mapDescription: description || '‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å'
  };

  callSendAPIAsync(psid, {
    text: `üìç ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö: ${latitude.toFixed(6)}, ${longitude.toFixed(6)}\n${description ? `üìù ${description}` : ''}\n\nüí∞ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô:`,
    quick_replies: [
      { content_type: 'text', title: 'üíµ ‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏á‡∏¥‡∏ô‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á', payload: 'PAYMENT_COD' },
      { content_type: 'text', title: 'üè¶ ‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô', payload: 'PAYMENT_TRANSFER' }
    ]
  });

  await updateSession(psid, { step: 'ask_payment', tempData: shipping });
}

// ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ text input ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö coordinates
export async function handleCoordinatesText(psid: string, text: string) {
  // Parse coordinates from text like "13.756331, 100.501765" or "13.756331, 100.501765 description"
  const coordPattern = /(-?\d+\.?\d*),\s*(-?\d+\.?\d*)\s*(.*)/;
  const match = text.match(coordPattern);
  
  if (match) {
    const latitude = parseFloat(match[1]);
    const longitude = parseFloat(match[2]);
    const description = match[3].trim() || '‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏';
    
    if (latitude >= -90 && latitude <= 90 && longitude >= -180 && longitude <= 180) {
      await handleLalamoveLocation(psid, latitude, longitude, description);
      return;
    }
  }
  
  callSendAPIAsync(psid, {
    text: `‚ùå ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏û‡∏¥‡∏Å‡∏±‡∏î‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á\n\n‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏û‡∏¥‡∏°‡∏û‡πå‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö: "latitude, longitude ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢"\n‡πÄ‡∏ä‡πà‡∏ô: "13.756331, 100.501765 ‡∏™‡∏≥‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô"\n\n‡∏´‡∏£‡∏∑‡∏≠‡πÅ‡∏ä‡∏£‡πå‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì`,
    quick_replies: [
      { content_type: 'location' }
    ]
  });
}

export async function finalizeOrder(psid: string) {
  console.log('[FinalizeOrder] start for', psid);
  await connectDB();
  const session = await getSession(psid);
  console.log('[FinalizeOrder] session', JSON.stringify(session));
  const shipping = session.tempData as any as ShippingInfo & { paymentMethod?: string; slipUrl?: string };
  const total = session.cart.reduce((s, i) => s + i.price * i.quantity, 0);
  const shippingFee = await computeShippingFee(session.cart);
  const grandTotal = total + shippingFee;

  const items = session.cart.map((c) => ({
    productId: c.productId,
    name: c.name,
    price: c.price,
    quantity: c.quantity,
    selectedOptions: c.selectedOptions || {},
    unitLabel: c.unitLabel,
    unitPrice: c.unitPrice,
  }));

  // Log ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î payload ‡πÄ‡∏û‡∏∑‡πà‡∏≠ debug ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
  console.log('[FinalizeOrder] built items', JSON.stringify(items));

  // ‡∏´‡∏≤ userId & phone ‡∏à‡∏≤‡∏Å MessengerUser
  const mu = await MessengerUser.findOne({ psid });
  const payload: any = {
    customerName: shipping.name,
    customerPhone: mu?.phoneNumber || '000',
    customerAddress: shipping.address,
    deliveryMethod: shipping.deliveryMethod || 'standard',
    items,
    shippingFee,
    discount: 0,
    totalAmount: grandTotal,
  };
  if (mu?.userId) payload.userId = mu.userId;
  if (shipping.paymentMethod) payload.paymentMethod = shipping.paymentMethod;
  if (shipping.slipUrl) payload.slipUrl = shipping.slipUrl;
  if (shipping.deliveryLocation) payload.deliveryLocation = shipping.deliveryLocation;

  console.log('[FinalizeOrder] payload', JSON.stringify(payload));

  try {
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á absolute URL ‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á (Node fetch ‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö relative path)
    const originEnv = process.env.SITE_URL || process.env.NEXT_PUBLIC_SITE_URL || 'https://www.winrichdynamic.com';
    const origin = originEnv.startsWith('http') ? originEnv : `https://${originEnv.replace(/^https?:\/\//, '')}`;
    const res = await fetch(`${origin.replace(/\/$/, '')}/api/orders`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(payload),
    });

    if (!res.ok) {
      const text = await res.text();
      console.error('[FinalizeOrder] API error', res.status, text);
      throw new Error(`API ${res.status}`);
    }

    // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß
    const orderResult = await res.json();
    const orderId = orderResult._id ? orderResult._id.slice(-8).toUpperCase() : 'N/A';
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠
    callSendAPIAsync(psid, { 
      text: `üéâ ‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!\n\nüì¶ ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠: ${orderId}\n\n‡∏ß‡∏¥‡∏ò‡∏µ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô: ${shipping.paymentMethod === 'transfer' ? '‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô' : '‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏á‡∏¥‡∏ô‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á'}\n‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏™‡∏¥‡πâ‡∏ô: ${grandTotal.toLocaleString()} ‡∏ö‡∏≤‡∏ó\n\n‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏Ñ‡πà‡∏∞\n‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡πâ‡πÄ‡∏£‡πá‡∏ß‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î` 
    });
    
    // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠
    callSendAPIAsync(psid, {
      text: '‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤ ‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà‡πÅ‡∏ä‡∏ó‡∏ô‡∏µ‡πâ',
      quick_replies: [
        { content_type: 'text', title: 'üõçÔ∏è ‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°', payload: 'SHOW_PRODUCTS' },
        { content_type: 'text', title: '‚ùì ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô', payload: 'CONTACT_STAFF' }
      ]
    });
  } catch (err) {
    console.error('[FinalizeOrder] fetch error', err);
    callSendAPIAsync(psid, { text: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà' });
  }

  // clear cart & reset step
  await updateSession(psid, { cart: [], step: 'browse', tempData: {} });
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ß‡πâ
export async function handleSavedAddressSelection(psid: string, addressIndex: number) {
  const session = await getSession(psid);
  const savedAddresses = (session.tempData as any)?.savedAddresses || [];
  const selectedAddress = savedAddresses[addressIndex];
  
  if (!selectedAddress) {
    return callSendAPIAsync(psid, { text: '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á' });
  }
  
  // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå
  const fullAddress = [
    selectedAddress.address,
    selectedAddress.subdistrict,
    selectedAddress.district,
    selectedAddress.province,
    selectedAddress.postalCode
  ].filter(Boolean).join(' ');
  
  // ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
  return handleAddress(psid, fullAddress, (session.tempData as any)?.name);
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏à‡πâ‡∏á‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏£‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏´‡∏°‡πà
export async function promptNewAddress(psid: string) {
  callSendAPIAsync(psid, { text: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏´‡∏°‡πà‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì' });
  await updateSession(psid, { step: 'await_new_address' });
}

export async function askPayment(psid: string) {
  callSendAPIAsync(psid, {
    text: '‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏¥‡∏ò‡∏µ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏Ñ‡πà‡∏∞',
    quick_replies: [
      { content_type: 'text', title: 'üí≥ ‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô', payload: 'PAY_TRANSFER' },
      { content_type: 'text', title: 'üíµ ‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏á‡∏¥‡∏ô‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á (COD)', payload: 'PAY_COD' },
    ],
  });
  await updateSession(psid, { step: 'await_payment_method' });
}

export async function sendBankInfo(psid: string) {
  // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ö‡∏ö‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô
  callSendAPIAsync(psid, {
    text: 'üì¢ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô\n\nüè¶ ‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡∏Å‡∏™‡∏¥‡∏Å‡∏£‡πÑ‡∏ó‡∏¢\nüìù ‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ç‡∏ä‡∏µ: 1943234902\nüë§ ‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ç‡∏ä‡∏µ: ‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó ‡∏ß‡∏¥‡∏ô‡∏£‡∏¥‡∏ä ‡πÑ‡∏î‡∏ô‡∏≤‡∏°‡∏¥‡∏Ñ ‡∏à‡∏≥‡∏Å‡∏±‡∏î\n\nüí° ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏™‡πà‡∏á‡∏™‡∏•‡∏¥‡∏õ‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÉ‡∏ô‡πÅ‡∏ä‡∏ó‡∏ô‡∏µ‡πâ',
  });
  
  // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
  callSendAPIAsync(psid, { 
    text: '‡πÇ‡∏≠‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß ‡πÇ‡∏õ‡∏£‡∏î‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏•‡∏¥‡∏õ‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÉ‡∏ô‡πÅ‡∏ä‡∏ó‡∏ô‡∏µ‡πâ‡∏Ñ‡πà‡∏∞',
    quick_replies: [
      { content_type:'text', title:'‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ß‡∏¥‡∏ò‡∏µ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô', payload:'CHANGE_PAYMENT' }
    ]
  });
  
  await updateSession(psid, { 
    step: 'await_slip',
    tempData: {
      ...(await getSession(psid)).tempData,
      paymentMethod: 'transfer'
    } 
  });
}

// ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô COD ‡∏Å‡πà‡∏≠‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÉ‡∏à‡πÑ‡∏î‡πâ
export async function confirmCOD(psid:string){
  const session = await getSession(psid);
  const total = session.cart.reduce((s,i)=>s+i.price*i.quantity,0);
  const shippingFee = await computeShippingFee(session.cart);
  const grand = total + shippingFee;
  
  // ‡∏™‡∏£‡∏∏‡∏õ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÅ‡∏ö‡∏ö‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
  const itemsText = session.cart.map((c) => {
    let itemText = `‚Ä¢ ${c.name} x${c.quantity}`;
    if (c.unitLabel) {
      itemText += ` (${c.unitLabel})`;
    }
    if (c.selectedOptions && Object.keys(c.selectedOptions).length > 0) {
      const optionsText = Object.entries(c.selectedOptions).map(([k, v]) => `${k}: ${v}`).join(', ');
      itemText += ` [${optionsText}]`;
    }
    return itemText;
  }).join('\n');
  
  // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏£‡∏∏‡∏õ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÅ‡∏ö‡∏ö‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
  callSendAPIAsync(psid, {
    text: `üìã ‡∏™‡∏£‡∏∏‡∏õ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ (‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏á‡∏¥‡∏ô‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á)\n\n${itemsText}\n\nüí∞ ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤: ${total.toLocaleString()} ‡∏ö‡∏≤‡∏ó\nüöö ‡∏Ñ‡πà‡∏≤‡∏à‡∏±‡∏î‡∏™‡πà‡∏á: ${shippingFee.toLocaleString()} ‡∏ö‡∏≤‡∏ó\nüìä ‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ${grand.toLocaleString()} ‡∏ö‡∏≤‡∏ó\n\n‡πÇ‡∏õ‡∏£‡∏î‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠`,
    quick_replies:[
      { content_type:'text', title:'‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô ‚úîÔ∏è', payload:'COD_CONFIRM' },
      { content_type:'text', title:'‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ß‡∏¥‡∏ò‡∏µ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô', payload:'CHANGE_PAYMENT' }
    ]
  });
  
  await updateSession(psid, { 
    step:'await_cod_confirm',
    tempData: {
      ...(session.tempData || {}),
      paymentMethod: 'cod'
    } 
  });
}

// ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÅ‡∏ö‡∏ö‡∏™‡∏£‡∏∏‡∏õ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£
export async function showCart(psid: string) {
  const session = await getSession(psid);
  if (session.cart.length === 0) {
    return callSendAPIAsync(psid, { text: '‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ß‡πà‡∏≤‡∏á‡∏≠‡∏¢‡∏π‡πà‡∏Ñ‡πà‡∏∞' });
  }

  // --- ‡∏™‡∏£‡πâ‡∏≤‡∏á carousel ‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ä‡∏¥‡πâ‡∏ô ---
  const elements = await Promise.all(session.cart.slice(0, 10).map(async (c, idx) => {
    const prod = await getProductById(c.productId);
    const image = prod?.imageUrl ? transformImage(prod.imageUrl) : 'https://raw.githubusercontent.com/facebook/instant-articles-builder/master/docs/assets/fb-icon.png';
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏ß‡πà‡∏≤‡∏°‡∏µ option ‡∏™‡∏µ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    const hasColorOption = !!(prod?.options || []).find((o:any)=> o.name === '‡∏™‡∏µ' || o.name.toLowerCase() === 'color');
    let subtitle = `‡∏à‡∏≥‡∏ô‡∏ß‡∏ô ${c.quantity}`;
    if (c.unitLabel) subtitle += ` (${c.unitLabel})`;
    if (c.selectedOptions && Object.keys(c.selectedOptions).length > 0) {
      const opts = Object.entries(c.selectedOptions)
        .map(([k, v]) => `${k}: ${v}`)
        .join(', ');
      subtitle += ` | ${opts}`;
    }

    return {
      title: c.name.substring(0, 80), // ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡∏ï‡∏≤‡∏°‡∏Ç‡πâ‡∏≠‡∏à‡∏≥‡∏Å‡∏±‡∏î Facebook
      subtitle: subtitle.substring(0, 80),
      image_url: image,
      buttons: [
        {
          type: 'postback',
          title: '‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏à‡∏≥‡∏ô‡∏ß‡∏ô',
          payload: `EDIT_QTY_${idx}`,
        },
        ...(hasColorOption ? [{
          type: 'postback',
          title: '‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏µ',
          payload: `EDIT_COL_${idx}`,
        }] : []),
      ],
    };
  }));

  // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏° ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡πÉ‡∏ô element ‡∏™‡∏£‡∏∏‡∏õ
  const totalTmp = session.cart.reduce((s, i) => s + i.price * i.quantity, 0);
  const shipTmp = await computeShippingFee(session.cart);
  const grandTmp = totalTmp + shipTmp;

  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏™‡∏£‡∏∏‡∏õ‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô element ‡∏ï‡∏±‡∏ß‡πÅ‡∏£‡∏Å
  elements.unshift({
    title: 'üõí ‡∏™‡∏£‡∏∏‡∏õ‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤',
    subtitle: `‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏° ${grandTmp.toLocaleString()} ‡∏ö‡∏≤‡∏ó`,
    image_url: 'https://raw.githubusercontent.com/facebook/instant-articles-builder/master/docs/assets/fb-icon.png',
    buttons: [
      { type: 'postback', title: '‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ ‚úîÔ∏è', payload: 'CONFIRM_CART' },
      { type: 'postback', title: '‡∏•‡πâ‡∏≤‡∏á‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤', payload: 'CLEAR_CART' },
    ],
  });

  // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡πà‡∏≠‡∏ô
  callSendAPIAsync(psid, { text: '‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏à‡∏≥‡∏ô‡∏ß‡∏ô ‡πÉ‡∏´‡πâ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° "‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏à‡∏≥‡∏ô‡∏ß‡∏ô" ‡∏ó‡∏µ‡πà‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ô‡∏±‡πâ‡∏ô ‡πÅ‡∏•‡πâ‡∏ß‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡πà‡∏∞' });

  // ‡∏™‡πà‡∏á carousel (‡∏£‡∏ß‡∏°‡∏™‡∏£‡∏∏‡∏õ)
  callSendAPIAsync(psid, {
    attachment: {
      type: 'template',
      payload: {
        template_type: 'generic',
        image_aspect_ratio: 'square',
        elements,
      },
    },
  });

  // --- ‡∏™‡πà‡∏á‡∏™‡∏£‡∏∏‡∏õ‡∏¢‡∏≠‡∏î‡πÅ‡∏•‡∏∞ quick replies ---
  const total = session.cart.reduce((s, i) => s + i.price * i.quantity, 0);
  const shippingFee = await computeShippingFee(session.cart);
  const grand = total + shippingFee;

  callSendAPIAsync(psid, {
    text: `‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏° ${grand.toLocaleString()} ‡∏ö‡∏≤‡∏ó`,
    quick_replies: [
      { content_type: 'text', title: '‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠', payload: 'CONFIRM_CART' },
      { content_type: 'text', title: '‡∏•‡πâ‡∏≤‡∏á‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤', payload: 'CLEAR_CART' },
      { content_type: 'text', title: '‡∏î‡∏π‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°', payload: 'SHOW_PRODUCTS' },
    ],
  });

  await updateSession(psid, { step: 'summary' });
}

// ‡∏™‡πà‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏µ‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏µ
export async function askColorOptions(psid: string, cartIdx: number) {
  const session = await getSession(psid);
  const item = session.cart[cartIdx];
  if (!item) return;
  const prod = await getProductById(item.productId);
  const colorOpt = (prod?.options || []).find((o:any)=> o.name === '‡∏™‡∏µ' || o.name.toLowerCase()==='color');
  if (!colorOpt) return;

  callSendAPIAsync(psid, {
    text: '‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏µ‡πÉ‡∏´‡∏°‡πà',
    quick_replies: colorOpt.values.slice(0,11).map((v:any)=>({
      content_type:'text',
      title: v.label.substring(0,20),
      payload: `SET_COL_${cartIdx}_${encodeURIComponent(v.label)}`,
    })),
  });
  await updateSession(psid, { step: 'await_color' });
}